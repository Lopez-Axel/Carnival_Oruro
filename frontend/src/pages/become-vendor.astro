---
// src/pages/become-vendor.astro
import MainLayout from '../layouts/MainLayout.astro';

const user = Astro.locals.user;

if (!user) {
  return Astro.redirect('/signin');
}

const { profile } = user;
// Solo clientes pueden acceder
if (profile?.role && profile.role !== 'cliente') {
  return Astro.redirect('/dashboard');
}

const userData = user.user;
const userProfile = user.profile;
---

<MainLayout>
  <br>
  <br>
  <br>
  <div class="vendor-application">
    <!-- Header -->
    <header class="application-header">
      <div class="header-content">
        <h1>Convertirse en Vendedor Autorizado</h1>
        <p>√önete a nuestro equipo de vendedores del Carnaval de Oruro</p>
        <div class="breadcrumb">
          <a href="/dashboard">Dashboard</a> > Solicitar ser Vendedor
        </div>
      </div>
    </header>

    <!-- Progress Bar -->
    <div class="progress-container">
      <div class="progress-bar">
        <div class="step active" data-step="1">
          <div class="step-number">1</div>
          <div class="step-label">Informaci√≥n del Negocio</div>
        </div>
        <div class="step" data-step="2">
          <div class="step-number">2</div>
          <div class="step-label">Documentos</div>
        </div>
        <div class="step" data-step="3">
          <div class="step-number">3</div>
          <div class="step-label">Revisi√≥n</div>
        </div>
      </div>
    </div>

    <!-- Form Container -->
    <div class="form-container">
      
      <!-- Step 1: Business Information -->
      <div class="form-step active" id="step-1">
        <div class="step-header">
          <h2>üìã Informaci√≥n del Negocio</h2>
          <p>Cu√©ntanos sobre tu negocio o experiencia comercial</p>
        </div>

        <form id="business-form">
          <div class="form-grid">
            <div class="form-group">
              <label for="business_name">Nombre del Negocio *</label>
              <input 
                type="text" 
                id="business_name" 
                name="business_name" 
                required 
                placeholder="Ej: Agencia de Viajes Bolivia"
              >
              <div class="field-help">El nombre comercial de tu negocio</div>
            </div>

            <div class="form-group">
              <label for="business_type">Tipo de Negocio *</label>
              <select id="business_type" name="business_type" required>
                <option value="">Seleccionar tipo...</option>
                <option value="agencia_viajes">Agencia de Viajes</option>
                <option value="hotel">Hotel / Hospedaje</option>
                <option value="restaurante">Restaurante / Gastronom√≠a</option>
                <option value="independiente">Vendedor Independiente</option>
                <option value="otro">Otro</option>
              </select>
            </div>

            <div class="form-group">
              <label for="tax_id">NIT (N√∫mero de Identificaci√≥n Tributaria)</label>
              <input 
                type="text" 
                id="tax_id" 
                name="tax_id" 
                placeholder="Ej: 1234567890"
              >
              <div class="field-help">Opcional, pero recomendado para ventas formales</div>
            </div>

            <div class="form-group">
              <label for="business_phone">Tel√©fono del Negocio</label>
              <input 
                type="tel" 
                id="business_phone" 
                name="business_phone" 
                placeholder="Ej: +591 70123456"
              >
            </div>

            <div class="form-group full-width">
              <label for="business_address">Direcci√≥n del Negocio</label>
              <input 
                type="text" 
                id="business_address" 
                name="business_address" 
                placeholder="Ej: Calle Comercio #123, Oruro, Bolivia"
              >
            </div>

            <div class="form-group">
              <label for="business_email">Email del Negocio</label>
              <input 
                type="email" 
                id="business_email" 
                name="business_email" 
                placeholder="contacto@tunegocio.com"
              >
            </div>

            <div class="form-group">
              <label for="years_of_experience">A√±os de Experiencia</label>
              <select id="years_of_experience" name="years_of_experience">
                <option value="0">Menos de 1 a√±o</option>
                <option value="1">1-2 a√±os</option>
                <option value="3">3-5 a√±os</option>
                <option value="6">6-10 a√±os</option>
                <option value="11">M√°s de 10 a√±os</option>
              </select>
            </div>

            <div class="form-group full-width">
              <label for="description">Descripci√≥n del Negocio</label>
              <textarea 
                id="description" 
                name="description" 
                rows="3" 
                placeholder="Describe brevemente tu negocio, servicios que ofreces, ubicaci√≥n, etc."
              ></textarea>
            </div>

            <div class="form-group full-width">
              <label for="why_want_to_sell">¬øPor qu√© quieres ser vendedor autorizado? *</label>
              <textarea 
                id="why_want_to_sell" 
                name="why_want_to_sell" 
                rows="4" 
                required 
                placeholder="Explica tus motivaciones, experiencia previa vendiendo entradas, por qu√© crees que ser√≠as un buen vendedor para el Carnaval de Oruro... (m√≠nimo 50 caracteres)"
              ></textarea>
              <div class="char-counter">
                <span id="char-count">0</span> / 50 caracteres m√≠nimo
              </div>
            </div>

            <div class="form-group">
              <label for="expected_sales_volume">Volumen de Ventas Esperado (entradas/mes)</label>
              <select id="expected_sales_volume" name="expected_sales_volume">
                <option value="">Seleccionar...</option>
                <option value="10">1-10 entradas</option>
                <option value="25">11-25 entradas</option>
                <option value="50">26-50 entradas</option>
                <option value="100">51-100 entradas</option>
                <option value="200">M√°s de 100 entradas</option>
              </select>
            </div>
          </div>

          <div class="form-actions">
            <button type="button" class="btn-secondary" onclick="window.history.back()">
              Cancelar
            </button>
            <button type="button" class="btn-primary" onclick="nextStep()">
              Continuar a Documentos ‚Üí
            </button>
          </div>
        </form>
      </div>

      <!-- Step 2: Documents -->
      <div class="form-step" id="step-2">
        <div class="step-header">
          <h2>üìÑ Documentos Requeridos</h2>
          <p>Sube los documentos necesarios para verificar tu identidad y negocio</p>
        </div>

        <!-- Requirements Info -->
        <div class="requirements-info">
          <h3>üìã Documentos Obligatorios:</h3>
          <ul>
            <li><strong>C√©dula de Identidad:</strong> Copia clara y legible</li>
            <li><strong>NIT:</strong> Si tienes actividad comercial (opcional)</li>
            <li><strong>Licencia de Funcionamiento:</strong> Si tienes negocio establecido (opcional)</li>
          </ul>
          <div class="file-requirements">
            <p><strong>Requisitos de archivos:</strong></p>
            <p>‚Ä¢ Formatos: PDF, JPG, PNG ‚Ä¢ Tama√±o m√°ximo: 5MB por archivo ‚Ä¢ Documentos claros y legibles</p>
          </div>
        </div>

        <!-- Document Upload Areas -->
        <div class="documents-grid">
          <div class="document-upload" data-document-type="cedula">
            <div class="upload-header">
              <h4>üÜî C√©dula de Identidad *</h4>
              <span class="required-badge">Obligatorio</span>
            </div>
            <div class="upload-area" onclick="triggerFileInput('cedula')">
              <div class="upload-content">
                <div class="upload-icon">üìé</div>
                <p class="upload-text">Arrastra tu archivo aqu√≠ o haz clic para seleccionar</p>
                <p class="upload-hint">PDF, JPG, PNG (m√°x. 5MB)</p>
              </div>
              <input type="file" id="file-cedula" accept=".pdf,.jpg,.jpeg,.png" style="display: none;">
            </div>
            <div class="upload-status" id="status-cedula"></div>
          </div>

          <div class="document-upload" data-document-type="nit">
            <div class="upload-header">
              <h4>üè¢ NIT</h4>
              <span class="optional-badge">Opcional</span>
            </div>
            <div class="upload-area" onclick="triggerFileInput('nit')">
              <div class="upload-content">
                <div class="upload-icon">üìé</div>
                <p class="upload-text">Arrastra tu archivo aqu√≠ o haz clic para seleccionar</p>
                <p class="upload-hint">PDF, JPG, PNG (m√°x. 5MB)</p>
              </div>
              <input type="file" id="file-nit" accept=".pdf,.jpg,.jpeg,.png" style="display: none;">
            </div>
            <div class="upload-status" id="status-nit"></div>
          </div>

          <div class="document-upload" data-document-type="licencia_funcionamiento">
            <div class="upload-header">
              <h4>üìã Licencia de Funcionamiento</h4>
              <span class="optional-badge">Opcional</span>
            </div>
            <div class="upload-area" onclick="triggerFileInput('licencia_funcionamiento')">
              <div class="upload-content">
                <div class="upload-icon">üìé</div>
                <p class="upload-text">Arrastra tu archivo aqu√≠ o haz clic para seleccionar</p>
                <p class="upload-hint">PDF, JPG, PNG (m√°x. 5MB)</p>
              </div>
              <input type="file" id="file-licencia_funcionamiento" accept=".pdf,.jpg,.jpeg,.png" style="display: none;">
            </div>
            <div class="upload-status" id="status-licencia_funcionamiento"></div>
          </div>
        </div>

        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="prevStep()">
            ‚Üê Anterior
          </button>
          <button type="button" class="btn-primary" onclick="nextStep()" id="continue-review">
            Continuar a Revisi√≥n ‚Üí
          </button>
        </div>
      </div>

      <!-- Step 3: Review -->
      <div class="form-step" id="step-3">
        <div class="step-header">
          <h2>‚úÖ Revisi√≥n Final</h2>
          <p>Verifica toda la informaci√≥n antes de enviar tu solicitud</p>
        </div>

        <div class="review-container">
          <div class="review-section">
            <h3>üìã Informaci√≥n del Negocio</h3>
            <div id="review-business" class="review-content"></div>
            <button type="button" class="edit-btn" onclick="goToStep(1)">Editar</button>
          </div>

          <div class="review-section">
            <h3>üìÑ Documentos Subidos</h3>
            <div id="review-documents" class="review-content"></div>
            <button type="button" class="edit-btn" onclick="goToStep(2)">Editar</button>
          </div>

          <div class="terms-section">
            <label class="checkbox-label">
              <input type="checkbox" id="accept-terms" required>
              <span class="checkmark"></span>
              Acepto los <a href="/terms" target="_blank">t√©rminos y condiciones</a> y confirmo que toda la informaci√≥n proporcionada es veraz.
            </label>
          </div>
        </div>

        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="prevStep()">
            ‚Üê Anterior
          </button>
          <button type="button" class="btn-primary" onclick="submitApplication()" id="submit-application">
            üöÄ Enviar Solicitud
          </button>
        </div>
      </div>

      <!-- Success Message -->
      <div class="form-step" id="success-step" style="display: none;">
        <div class="success-content">
          <div class="success-icon">üéâ</div>
          <h2>¬°Solicitud Enviada Exitosamente!</h2>
          <p>Tu solicitud para convertirte en vendedor autorizado ha sido enviada correctamente.</p>
          
          <div class="success-info">
            <div class="info-item">
              <span class="info-label">N√∫mero de Solicitud:</span>
              <span class="info-value" id="application-id">---</span>
            </div>
            <div class="info-item">
              <span class="info-label">Estado:</span>
              <span class="info-value status-pending">En Revisi√≥n</span>
            </div>
            <div class="info-item">
              <span class="info-label">Tiempo Estimado:</span>
              <span class="info-value">3-5 d√≠as h√°biles</span>
            </div>
          </div>

          <div class="success-actions">
            <a href="/vendor/status" class="btn-primary">Ver Estado de Solicitud</a>
            <a href="/dashboard" class="btn-secondary">Volver al Dashboard</a>
          </div>

          <div class="next-steps">
            <h3>üìã Pr√≥ximos Pasos:</h3>
            <ol>
              <li>Recibir√°s un email de confirmaci√≥n</li>
              <li>Nuestro equipo revisar√° tu solicitud</li>
              <li>Te notificaremos la decisi√≥n por email</li>
              <li>Si eres aprobado, tendr√°s acceso al panel de vendedor</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script define:vars={{ 
  userId: userData?.id, 
  userEmail: userData?.email,
  userName: userData?.user_metadata?.full_name || userData?.email?.split('@')[0]
}}>

let currentStep = 1;
let applicationData = {};
let applicationId = null;
let uploadedDocuments = {};

// Configuraci√≥n de la API
const API_BASE_URL = 'http://localhost:8000/api/vendor';

// Headers para autenticaci√≥n temporal (incluye modo desarrollo)
const getHeaders = () => ({
  'X-User-Id': userId || 'test-user-id',
  'X-User-Email': userEmail || 'test@example.com',
  'X-Development-Mode': 'true'  // Activa modo desarrollo
});

// Character counter for textarea
document.getElementById('why_want_to_sell').addEventListener('input', function() {
  const charCount = this.value.length;
  document.getElementById('char-count').textContent = charCount;
  
  if (charCount >= 50) {
    document.getElementById('char-count').style.color = '#16a34a';
  } else {
    document.getElementById('char-count').style.color = '#dc2626';
  }
});

// File upload handling
window.triggerFileInput = function(docType) {
  document.getElementById(`file-${docType}`).click();
};

// Setup file input listeners
['cedula', 'nit', 'licencia_funcionamiento'].forEach(docType => {
  const input = document.getElementById(`file-${docType}`);
  const uploadArea = input.parentElement;
  const statusDiv = document.getElementById(`status-${docType}`);

  input.addEventListener('change', (e) => handleFileUpload(e, docType));
  
  // Drag and drop
  uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.classList.add('drag-over');
  });

  uploadArea.addEventListener('dragleave', () => {
    uploadArea.classList.remove('drag-over');
  });

  uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('drag-over');
    const files = e.dataTransfer.files;
    if (files.length > 0) {
      handleFileUpload({ target: { files } }, docType);
    }
  });
});

async function handleFileUpload(event, docType) {
  const file = event.target.files[0];
  const statusDiv = document.getElementById(`status-${docType}`);
  
  if (!file) return;

  // Validate file
  const maxSize = 5 * 1024 * 1024; // 5MB
  const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png'];
  
  if (file.size > maxSize) {
    showUploadError(statusDiv, 'El archivo es muy grande. M√°ximo 5MB.');
    return;
  }

  if (!allowedTypes.includes(file.type)) {
    showUploadError(statusDiv, 'Tipo de archivo no permitido. Solo PDF, JPG, PNG.');
    return;
  }

  // Show uploading status
  showUploadProgress(statusDiv, 'Subiendo archivo...');

  try {
    // First, make sure we have an application ID
    if (!applicationId) {
      await createApplication();
    }

    // Upload file
    const formData = new FormData();
    formData.append('file', file);
    formData.append('document_type', docType);

    const response = await fetch(`${API_BASE_URL}/upload-document/${applicationId}`, {
      method: 'POST',
      headers: getHeaders(),
      body: formData
    });

    if (response.ok) {
      const result = await response.json();
      uploadedDocuments[docType] = {
        ...result,
        filename: file.name
      };
      showUploadSuccess(statusDiv, `‚úÖ ${file.name} subido exitosamente`);
    } else {
      const error = await response.json();
      showUploadError(statusDiv, error.detail || 'Error al subir archivo');
    }
  } catch (error) {
    console.error('Upload error:', error);
    showUploadError(statusDiv, 'Error de conexi√≥n. Int√©ntalo de nuevo.');
  }
}

function showUploadProgress(statusDiv, message) {
  statusDiv.innerHTML = `
    <div class="upload-progress">
      <div class="spinner"></div>
      <span>${message}</span>
    </div>
  `;
  statusDiv.className = 'upload-status uploading';
}

function showUploadSuccess(statusDiv, message) {
  statusDiv.innerHTML = `<div class="upload-success">${message}</div>`;
  statusDiv.className = 'upload-status success';
}

function showUploadError(statusDiv, message) {
  statusDiv.innerHTML = `<div class="upload-error">‚ùå ${message}</div>`;
  statusDiv.className = 'upload-status error';
}

// Step navigation
window.nextStep = async function() {
  if (currentStep === 1) {
    if (!validateBusinessForm()) return;
    await createApplication();
  } else if (currentStep === 2) {
    if (!validateDocuments()) return;
  }
  
  if (currentStep < 3) {
    currentStep++;
    updateStepDisplay();
    updateProgressBar();
    
    if (currentStep === 3) {
      populateReview();
    }
  }
};

window.prevStep = function() {
  if (currentStep > 1) {
    currentStep--;
    updateStepDisplay();
    updateProgressBar();
  }
};

window.goToStep = function(step) {
  currentStep = step;
  updateStepDisplay();
  updateProgressBar();
};

function updateStepDisplay() {
  document.querySelectorAll('.form-step').forEach(step => {
    step.classList.remove('active');
  });
  document.getElementById(`step-${currentStep}`).classList.add('active');
}

function updateProgressBar() {
  document.querySelectorAll('.step').forEach((step, index) => {
    const stepNum = index + 1;
    if (stepNum <= currentStep) {
      step.classList.add('active');
    } else {
      step.classList.remove('active');
    }
  });
}

function validateBusinessForm() {
  const form = document.getElementById('business-form');
  const formData = new FormData(form);
  const data = Object.fromEntries(formData);
  
  if (!data.business_name || data.business_name.trim().length < 3) {
    alert('El nombre del negocio debe tener al menos 3 caracteres');
    return false;
  }

  if (!data.business_type) {
    alert('Debes seleccionar un tipo de negocio');
    return false;
  }

  if (!data.why_want_to_sell || data.why_want_to_sell.trim().length < 50) {
    alert('Debes explicar con al menos 50 caracteres por qu√© quieres ser vendedor');
    return false;
  }

  applicationData = data;
  return true;
}

function validateDocuments() {
  if (!uploadedDocuments.cedula) {
    alert('Debes subir tu c√©dula de identidad');
    return false;
  }
  return true;
}

async function createApplication() {
  if (applicationId) return; // Ya existe

  try {
    console.log('Creating application with data:', applicationData);
    
    const response = await fetch(`${API_BASE_URL}/apply`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        ...getHeaders()
      },
      body: JSON.stringify(applicationData)
    });

    console.log('Response status:', response.status);
    
    if (response.ok) {
      const result = await response.json();
      console.log('Application created:', result);
      applicationId = result.application_id;
      
      if (!applicationId) {
        throw new Error('No application ID returned from server');
      }
    } else {
      const errorText = await response.text();
      console.error('Error response:', errorText);
      throw new Error(`Server error: ${response.status} - ${errorText}`);
    }
  } catch (error) {
    console.error('Error creating application:', error);
    alert(`Error al crear la solicitud: ${error.message}`);
    throw error;
  }
}

function populateReview() {
  // Business info review
  const businessReview = document.getElementById('review-business');
  businessReview.innerHTML = `
    <div class="review-grid">
      <div class="review-item">
        <strong>Nombre del Negocio:</strong>
        <span>${applicationData.business_name}</span>
      </div>
      <div class="review-item">
        <strong>Tipo de Negocio:</strong>
        <span>${formatBusinessType(applicationData.business_type)}</span>
      </div>
      ${applicationData.tax_id ? `
        <div class="review-item">
          <strong>NIT:</strong>
          <span>${applicationData.tax_id}</span>
        </div>
      ` : ''}
      ${applicationData.business_phone ? `
        <div class="review-item">
          <strong>Tel√©fono:</strong>
          <span>${applicationData.business_phone}</span>
        </div>
      ` : ''}
      <div class="review-item full-width">
        <strong>Motivaci√≥n:</strong>
        <span>${applicationData.why_want_to_sell}</span>
      </div>
    </div>
  `;

  // Documents review
  const documentsReview = document.getElementById('review-documents');
  const docsList = Object.keys(uploadedDocuments).map(docType => {
    return `
      <div class="document-item">
        <span class="doc-icon">üìÑ</span>
        <span>${formatDocumentType(docType)}</span>
        <span class="doc-status">‚úÖ Subido</span>
      </div>
    `;
  }).join('');

  documentsReview.innerHTML = `
    <div class="documents-list">
      ${docsList}
      ${Object.keys(uploadedDocuments).length === 0 ? '<p>No hay documentos subidos</p>' : ''}
    </div>
  `;
}

function formatBusinessType(type) {
  const types = {
    'agencia_viajes': 'Agencia de Viajes',
    'hotel': 'Hotel / Hospedaje',
    'restaurante': 'Restaurante / Gastronom√≠a',
    'independiente': 'Vendedor Independiente',
    'otro': 'Otro'
  };
  return types[type] || type;
}

function formatDocumentType(type) {
  const types = {
    'cedula': 'C√©dula de Identidad',
    'nit': 'NIT',
    'licencia_funcionamiento': 'Licencia de Funcionamiento'
  };
  return types[type] || type;
}

window.submitApplication = async function() {
  const termsAccepted = document.getElementById('accept-terms').checked;
  
  if (!termsAccepted) {
    alert('Debes aceptar los t√©rminos y condiciones');
    return;
  }

  const submitBtn = document.getElementById('submit-application');
  submitBtn.disabled = true;
  submitBtn.innerHTML = '‚è≥ Enviando...';

  try {
    // La aplicaci√≥n ya fue creada, solo mostramos √©xito
    document.getElementById('application-id').textContent = applicationId || 'TEMP-' + Date.now();
    
    // Hide current step and show success
    document.querySelectorAll('.form-step').forEach(step => {
      step.classList.remove('active');
    });
    document.getElementById('success-step').style.display = 'block';
    document.getElementById('success-step').classList.add('active');
    
    // Update progress bar to show completion
    document.querySelectorAll('.step').forEach(step => {
      step.classList.add('active');
    });

  } catch (error) {
    console.error('Error submitting application:', error);
    alert('Error al enviar la solicitud. Int√©ntalo de nuevo.');
    submitBtn.disabled = false;
    submitBtn.innerHTML = 'üöÄ Enviar Solicitud';
  }
};

// Test connection on page load
document.addEventListener('DOMContentLoaded', async function() {
  try {
    const response = await fetch(`${API_BASE_URL}/health`);
    if (response.ok) {
      console.log('‚úÖ Conexi√≥n con API establecida');
    } else {
      console.warn('‚ö†Ô∏è Problema de conexi√≥n con API');
    }
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n con API:', error);
  }
});
</script>

<style>
  /* Colores del Carnaval */
  :root {
    --carnival-orange: #ff6b35;
    --carnival-gold: #f7931e;
    --carnival-yellow: #ffd700;
    --carnival-red: #dc2626;
    --carnival-green: #16a34a;
    --carnival-blue: #2563eb;
    --dark-bg: #1a1a2e;
    --dark-card: rgba(255, 255, 255, 0.05);
    --dark-border: rgba(255, 255, 255, 0.1);
    --text-light: rgba(255, 255, 255, 0.9);
    --text-muted: rgba(255, 255, 255, 0.7);
  }

  .vendor-application {
    min-height: 100vh;
    background: linear-gradient(135deg, var(--dark-bg) 0%, #16213e 50%, #0f1419 100%);
    color: white;
    padding: 20px;
  }

  /* Header */
  .application-header {
    text-align: center;
    margin-bottom: 40px;
  }

  .header-content h1 {
    font-size: 2.5rem;
    margin: 0 0 16px 0;
    background: linear-gradient(135deg, var(--carnival-orange), var(--carnival-gold), var(--carnival-yellow));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .header-content p {
    font-size: 1.2rem;
    color: var(--text-muted);
    margin-bottom: 16px;
  }

  .breadcrumb {
    color: var(--text-muted);
    font-size: 0.9rem;
  }

  .breadcrumb a {
    color: var(--carnival-orange);
    text-decoration: none;
  }

  /* Progress Bar */
  .progress-container {
    max-width: 800px;
    margin: 0 auto 40px;
  }

  .progress-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    padding: 0 20px;
  }

  .progress-bar::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--dark-border);
    z-index: 1;
  }

  .step {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 2;
    background: var(--dark-bg);
    padding: 0 15px;
  }

  .step-number {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--dark-card);
    border: 2px solid var(--dark-border);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    margin-bottom: 8px;
    transition: all 0.3s;
  }

  .step.active .step-number {
    background: linear-gradient(135deg, var(--carnival-orange), var(--carnival-gold));
    border-color: var(--carnival-orange);
    color: white;
  }

  .step-label {
    font-size: 0.85rem;
    color: var(--text-muted);
    text-align: center;
  }

  .step.active .step-label {
    color: var(--text-light);
  }

  /* Form Container */
  .form-container {
    max-width: 800px;
    margin: 0 auto;
    background: var(--dark-card);
    border: 1px solid var(--dark-border);
    border-radius: 20px;
    padding: 40px;
    backdrop-filter: blur(10px);
  }

  .form-step {
    display: none;
  }

  .form-step.active {
    display: block;
  }

  .step-header {
    text-align: center;
    margin-bottom: 32px;
  }

  .step-header h2 {
    font-size: 1.8rem;
    margin: 0 0 8px 0;
    color: var(--text-light);
  }

  .step-header p {
    color: var(--text-muted);
    font-size: 1rem;
  }

  /* Form Styles */
  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 24px;
    margin-bottom: 32px;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group.full-width {
    grid-column: 1 / -1;
  }

  .form-group label {
    margin-bottom: 8px;
    font-weight: 600;
    color: var(--text-light);
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 12px 16px;
    border: 1px solid var(--dark-border);
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.05);
    color: white;
    font-size: 1rem;
    transition: all 0.3s;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--carnival-orange);
    background: rgba(255, 255, 255, 0.08);
  }

  .field-help {
    margin-top: 4px;
    font-size: 0.85rem;
    color: var(--text-muted);
  }

  .char-counter {
    margin-top: 4px;
    font-size: 0.85rem;
    color: var(--text-muted);
    text-align: right;
  }

  /* Requirements Info */
  .requirements-info {
    background: rgba(255, 193, 7, 0.1);
    border: 1px solid rgba(255, 193, 7, 0.3);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 32px;
  }

  .requirements-info h3 {
    margin: 0 0 12px 0;
    color: #fbbf24;
  }

  .requirements-info ul {
    margin: 0 0 16px 0;
    padding-left: 20px;
  }

  .requirements-info li {
    margin-bottom: 8px;
    color: var(--text-light);
  }

  .file-requirements {
    background: rgba(0, 0, 0, 0.2);
    padding: 12px;
    border-radius: 8px;
    margin-top: 16px;
  }

  .file-requirements p {
    margin: 0;
    font-size: 0.9rem;
    color: var(--text-muted);
  }

  /* Document Upload */
  .documents-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .document-upload {
    background: var(--dark-card);
    border: 1px solid var(--dark-border);
    border-radius: 12px;
    padding: 20px;
  }

  .upload-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
  }

  .upload-header h4 {
    margin: 0;
    color: var(--text-light);
  }

  .required-badge {
    background: var(--carnival-red);
    color: white;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .optional-badge {
    background: var(--carnival-blue);
    color: white;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .upload-area {
    border: 2px dashed var(--dark-border);
    border-radius: 8px;
    padding: 24px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s;
  }

  .upload-area:hover,
  .upload-area.drag-over {
    border-color: var(--carnival-orange);
    background: rgba(255, 107, 53, 0.05);
  }

  .upload-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }

  .upload-icon {
    font-size: 2rem;
    opacity: 0.6;
  }

  .upload-text {
    color: var(--text-light);
    margin: 0;
    font-weight: 500;
  }

  .upload-hint {
    color: var(--text-muted);
    margin: 0;
    font-size: 0.85rem;
  }

  .upload-status {
    margin-top: 12px;
    padding: 8px;
    border-radius: 6px;
    font-size: 0.9rem;
  }

  .upload-status.success {
    background: rgba(22, 163, 74, 0.2);
    color: #16a34a;
  }

  .upload-status.error {
    background: rgba(220, 38, 38, 0.2);
    color: #ef4444;
  }

  .upload-status.uploading {
    background: rgba(37, 99, 235, 0.2);
    color: #2563eb;
  }

  .upload-progress {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .spinner {
    width: 16px;
    height: 16px;
    border: 2px solid var(--dark-border);
    border-top: 2px solid var(--carnival-orange);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Review Styles */
  .review-container {
    margin-bottom: 32px;
  }

  .review-section {
    background: var(--dark-card);
    border: 1px solid var(--dark-border);
    border-radius: 12px;
    padding: 24px;
    margin-bottom: 24px;
    position: relative;
  }

  .review-section h3 {
    margin: 0 0 16px 0;
    color: var(--text-light);
    padding-right: 80px;
  }

  .edit-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    background: transparent;
    color: var(--carnival-orange);
    border: 1px solid var(--carnival-orange);
    padding: 6px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.85rem;
    transition: all 0.3s;
  }

  .edit-btn:hover {
    background: var(--carnival-orange);
    color: white;
  }

  .review-grid {
    display: grid;
    gap: 12px;
  }

  .review-item {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid var(--dark-border);
  }

  .review-item.full-width {
    flex-direction: column;
    gap: 8px;
  }

  .review-item strong {
    color: var(--text-muted);
    min-width: 150px;
  }

  .review-item span:last-child {
    color: var(--text-light);
    flex: 1;
  }

  .documents-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .document-item {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 8px 0;
  }

  .doc-icon {
    font-size: 1.2rem;
  }

  .doc-status {
    color: var(--carnival-green);
    font-size: 0.9rem;
    margin-left: auto;
  }

  .terms-section {
    background: rgba(37, 99, 235, 0.1);
    border: 1px solid rgba(37, 99, 235, 0.3);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 24px;
  }

  .checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    cursor: pointer;
    line-height: 1.5;
  }

  .checkbox-label input[type="checkbox"] {
    display: none;
  }

  .checkmark {
    width: 20px;
    height: 20px;
    border: 2px solid var(--dark-border);
    border-radius: 4px;
    background: transparent;
    position: relative;
    flex-shrink: 0;
    margin-top: 2px;
    transition: all 0.3s;
  }

  .checkbox-label input[type="checkbox"]:checked + .checkmark {
    background: var(--carnival-green);
    border-color: var(--carnival-green);
  }

  .checkbox-label input[type="checkbox"]:checked + .checkmark::after {
    content: '‚úì';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 14px;
    font-weight: bold;
  }

  .checkbox-label a {
    color: var(--carnival-orange);
    text-decoration: none;
  }

  .checkbox-label a:hover {
    text-decoration: underline;
  }

  /* Form Actions */
  .form-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 16px;
  }

  .btn-primary,
  .btn-secondary {
    padding: 12px 24px;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    border: none;
    font-size: 1rem;
    transition: all 0.3s;
    display: inline-flex;
    align-items: center;
    gap: 8px;
  }

  .btn-primary {
    background: linear-gradient(135deg, var(--carnival-orange), var(--carnival-gold));
    color: white;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(255, 107, 53, 0.4);
  }

  .btn-secondary {
    background: transparent;
    color: var(--text-muted);
    border: 1px solid var(--dark-border);
  }

  .btn-secondary:hover {
    background: var(--dark-card);
    color: var(--text-light);
  }

  /* Success Content */
  .success-content {
    text-align: center;
    padding: 40px 20px;
  }

  .success-icon {
    font-size: 4rem;
    margin-bottom: 20px;
  }

  .success-content h2 {
    color: var(--carnival-green);
    margin-bottom: 16px;
  }

  .success-content p {
    color: var(--text-muted);
    font-size: 1.1rem;
    margin-bottom: 32px;
  }

  .success-info {
    background: var(--dark-card);
    border: 1px solid var(--dark-border);
    border-radius: 12px;
    padding: 24px;
    margin-bottom: 32px;
    display: grid;
    gap: 16px;
  }

  .info-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .info-label {
    color: var(--text-muted);
    font-weight: 500;
  }

  .info-value {
    color: var(--text-light);
    font-weight: 600;
  }

  .status-pending {
    color: var(--carnival-gold) !important;
    background: rgba(247, 147, 30, 0.2);
    padding: 4px 12px;
    border-radius: 12px;
    font-size: 0.9rem;
  }

  .success-actions {
    display: flex;
    justify-content: center;
    gap: 16px;
    margin-bottom: 32px;
  }

  .next-steps {
    background: rgba(22, 163, 74, 0.1);
    border: 1px solid rgba(22, 163, 74, 0.3);
    border-radius: 12px;
    padding: 24px;
    text-align: left;
  }

  .next-steps h3 {
    margin: 0 0 16px 0;
    color: var(--carnival-green);
  }

  .next-steps ol {
    margin: 0;
    padding-left: 20px;
  }

  .next-steps li {
    margin-bottom: 8px;
    color: var(--text-light);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .vendor-application {
      padding: 15px;
    }

    .header-content h1 {
      font-size: 2rem;
    }

    .form-container {
      padding: 24px;
    }

    .form-grid {
      grid-template-columns: 1fr;
    }

    .documents-grid {
      grid-template-columns: 1fr;
    }

    .progress-bar {
      padding: 0 10px;
    }

    .step-label {
      font-size: 0.75rem;
    }

    .form-actions {
      flex-direction: column;
    }

    .success-actions {
      flex-direction: column;
    }

    .review-item {
      flex-direction: column;
      gap: 4px;
    }

    .edit-btn {
      position: relative;
      top: auto;
      right: auto;
      margin-top: 16px;
    }

    .review-section h3 {
      padding-right: 0;
    }
  }
</style>